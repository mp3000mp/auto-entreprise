# todo composer install --no-dev
- name: Rsync backend directories
  synchronize:
    delete: true
    src: '{{ playbook_dir }}/../../backend/{{ item }}'
    dest: "{{ app_directory }}/backend/"
    recursive: true
    rsync_opts:
      - "--chown={{ maintainer_user }}:{{ maintainer_user }}"
      - '--chmod=0750'
  loop:
    - 'bin'
    - 'config'
    - 'migrations'
    - 'public'
    - 'resources'
    - 'src'
    - 'templates'
    - 'translations'
    - 'vendor'

- name: Remove backendfiles
  file:
    state: absent
    path: "{{ app_directory }}/backend/{{ item }}"
  loop:
    - 'bin/phpunit'

- name: Deploy backend files
  copy:
    src: '{{ playbook_dir }}/../../backend/{{ item }}'
    dest: "{{ app_directory }}/backend/"
    owner: "{{ maintainer_user }}"
    group: "{{ maintainer_user }}"
    mode: '640'
  loop:
    - '.env'
    - 'composer.json'
    - 'composer.lock'
    - 'symfony.lock'

- name: Create backend .env.local
  template:
    src: templates/.env.j2
    dest: "{{ app_directory }}/backend/.env.local"
    owner: "{{ maintainer_user }}"
    group: "{{ maintainer_user }}"
    mode: '640'

- name: Create backend directories
  file:
    path: "{{ app_directory }}/backend/{{ item }}"
    state: directory
    owner: "{{ maintainer_user }}"
    group: "{{ maintainer_user }}"
    mode: '750'
  loop:
    - 'var'
    - 'var/log'
    - 'var/cache'

# not needed because we sync vendor for now
#- name: Composer install
#  shell:
#    cmd: docker-compose exec backend bash -l -c "composer install"
#    chdir: "{{ app_directory }}/docker"
